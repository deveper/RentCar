<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgCars.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgCars.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAU
        DwAAAk1TRnQBSQFMAgEBBgEAARABAAEQAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAm0B6gETBRUBFAET
        ARIB6wHtAhwG/wH0Ae8B6gFtAe8B8wT/IAAB6wLsARIBEAEPARACDwEQARUBFAETAW0C7AP/AfIB7QEU
        AhAEAAEVAewBBwH/IAAB7AHtAewBbQMPAw4BFAFDARQBEgFtAesB8gHsAUMDAAIUBQABDgGSAfEgAAIS
        AW0B6gMOAUMCEAHrAhUB7AHtAewB7wEOAZIBbQIOAm0BEQJmARUCQwEUAbwgAAHrAeoB6wFtAUMBbQEV
        ARECQwHsARIBEwLvARwB9wEQAW0BFAERARUBbQHqARUBEQEUARADDgHsIAAB6wHqAesC6gHrAeoBiwGu
        AewBbQHqAW0BcwEcAe8B7QFDAhECZgHsAW0BZgEVARAEDgHrIAADFQFtAxQBEwHsAZIB7AEcAXMBbgJL
        Ae0BbQK0AYsBZgFtARMCiwNmAREBQwHrIAABEAEVAREBFAKuAosBbAGuAewBHAEHAhwBmQFtBWYBEAET
        AbQBiwJsAa4CEgGRIAABEQEVAREBFAFtAe0B9wHtAesBbQHrAewCmQEaAfYB9wZmAbQBkQEHAe0BFQEU
        AW0B6wHxIAABEwFDARMBbQHsAZIB6wHsAW0BEgFtApkBGgL2AbwFZgG7AQkBkQHvAW0BZgFsAZEBrgH0
        IAABFAERARMBbQHsAfcB6wHsAZIB7QHsARwBmQL2Af8BvAORAbQBkQIJArQBzwG0AQkBGQH0Af8gAAEU
        ARUBEwFtAe0B9wHrAewB7wGSAewBmQEaAfYD/wH3AZIBEwEPARACuwQJAfQD/yAAARQB6gFtAesCkgLs
        Ae8CHAEaAcME/wH3Ae8BbQETAW0BEgHsAfcBvAGSAfIE/yAAAeoCbQHqAe0B9wLsAe8CHAGaAcME/wHy
        ARIBEwEVAesBbQHtAQcB7wHxBf8gAALqARIB6gHtAfcD7QHsAe8BGgH2Bf8BBwJtAe0B7AHtAe8B8wb/
        IAACEgHqAW0BkgL3AW0B6gHrAQcB9AH2B/8B9Av/IAAD9wLvAwcBvAHwAfEB8AG8Ae8C9wH/AfMB8gG8
        AvcB7wHwAfQB/wHzAvQD/xAAA/8B8wHsAW0BBwn/A/cB7QHrARIBFAEVAkMBFQHvAvABBwH3AfIB7QEU
        AQ4EAAERAewE8wL/EAAB/wHxAW0BDgIAAQ8BQwFtAe8B9AX/AQcB7wH3AewBEQJDAREBFQEUAhIB6wH3
        AZIB8AH0AQcBEgEAAQ4DAAEUAuoB7wLyAfQB/wMAAf8C9AH/CQAB8wFtARABQwEUARUCEgEOAQABDgES
        AfcB9AL/A7wB6gFDAhEBFAEVAREBEgHqAusBEwHwAf8BvAEUAkMCEQFDAhQBDgEAAUMBEgEHAf8CAAH0
        AW0BEAEPAQ4B7AHyAf8GAAHyAe0BbQHsAesDbQESAW0BQwEOAgABEgHwA/cBEgEUAm0BFAQSAesB7AHq
        AfcB/wHtAQ8BQwEPAmYBZQEVARIBQwERAe0BFAHsAf8CAAHzAUMB6wEUAUMBFAEPARUBkgG8Af8DAAH3
        AREBFQHtAeoB6wJtAeoB7ALtAewB6gEUAQcB7ALtAesCFQFDARQBbQETAW0BEgNtAZIB/wH3Aa4BkQFl
        AWYBQwFlAUMBEwEVARQBFQEQAW0B/wIAAW0BFAHtAQcB6gESAewBbQHsARQB9AMAAQcB7AHvARwBkgHs
        AhIBbQHvAxwB7wFtAfcD7AHrAeoCFAETARQB6gHsAW0B7ALrAewB/wG0AWYBQwFmAWUCigENAUMBDQGL
        AWYBFQHqAf8CAAHsAW0B7QH3AW0BFAIHAfcB6wHxAwAB7wEUAuwB9wHvARMBFQHrAe8CBwLvAesBkgXs
        AesEbQHsAfcB7wL3AZIB/wG7ARMBEgERAWYBiwGyAYoBDQJlAawBZQFDAf8CAAHvAfcB8QHwAewBFQEH
        Ae8BBwHsAbwDAAHvAuoBEwESARwB7QEUBu8B7AGSBuwB6wFtAhIBEwLqAu8B9wH/AfMBiwFmAWUBZgFt
        AfcBswKsAYoCZQFsAf8CAAHvA+0CBwHzAfIB8AHvAfIDAAHxAe0BBwHtAeoB9wHwAfEB8AMHAe8BBwG8
        AfMG7AFtAeoBEwEVARQB6gHtAe8C9wL/AbQDigKLAYoBrAGKA7IBswH/AgAB8wHyAfMC7wHyAvED8wMA
        Af8B9ALyBPADvAEHAbwB8gHzAfQB7QbsAW0BEgIUARIB7AGSAfcB7wP/AbsBkQJsAWYBigGsAWYBbAGL
        AYoBtAH/AwAB9AGSAuwB7wFtAZIBBwHwAfMDAAP/AfQB8wG8AvABvAHqAZIBBwG8AvAC9AEHAe0I7AHt
        AZIB9wLvBP8B8wHtARIBEQEOAQ8BbAFlAUMBEwEZAf8EAAH0ARMBFQFtAewBEgHrAewB/wMABf8BBwHs
        AfcB6gHsAeoBFQFDARQB8AP/AfQBBwHtBewB7QGSAfcD7wX/AfQB9wESAREBDgFmAQ4BEQFsAv8FAAHz
        ARQBFQHsAW0B6wHwBAAG/wEHAeoBQwHqARQBFQERAe0B9AX/AfQBBwHtAuwC7QH3Au8CBwb/AfQBBwGS
        AewBrgGRAbQB8gL/BgAB/wHxAfAB8QH0BQAH/wHzAe8B7QH3Ae0BvAH2CP8B9AEHAu0BkgH3BAcQ/xAA
        GP8B9AL3Ae8EBxD/EAAQ/wFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/hQAC/wYA
        Av8GAAHhAf8GAAHAAT8GAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHAAQcGAAHgAQcGAAHw
        AQcGAAH4AQ8GAAH8AR8GAAL/BgAC/wIACw==
</value>
  </data>
</root>